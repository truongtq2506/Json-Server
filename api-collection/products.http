@baseUrl = http://localhost:3000/api

@resourceName = products

# Products

# @name getAll
GET {{baseUrl}}/{{resourceName}}


### Filter

# @name filterProduct
GET {{baseUrl}}/{{resourceName}}?color=green&price_gte=950

### Pagination

# @name pagination
GET {{baseUrl}}/{{resourceName}}?_page=1&_limit=5

### SORT

# @name sort
GET {{baseUrl}}/{{resourceName}}?_sort=price&_order=asc


### SEARCH

# @name search
GET {{baseUrl}}/{{resourceName}}?name_like=Gorgeous

###

# @name addNew
POST {{baseUrl}}/{{resourceName}}
Content-Type: application/json

{
  "name": "Sam Sung"
}

###

# @name update
PATCH {{baseUrl}}/{{resourceName}}/2
Content-Type: application/json

{
  "name": "Samsung Galaxy"
}

###

# @name remove
DELETE {{baseUrl}}/{{resourceName}}/7e8dc2a8-7a28-459b-a770-5d06dc1a16ce


# ****EXAMPLE****

### ADD NEW  

# @name addNewProduct
POST {{baseUrl}}/{{resourceName}}
Content-Type: application/json

 {
    "categoryId": "7e8dc2a8-7a28-459b-a770-5d06dc1a16ce",
    "name": "Gorgeous Rubber Keyboard",
    "color": "mint green",
    "price": 282,
    "description": "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
    "thumbnailUrl": "http://placeimg.com/200/200"
  }

### UPDATE PRODUCT

# @name update
PATCH {{baseUrl}}/{{resourceName}}/qYb2wnM
Content-Type: application/json

 {
    "name": "Gorgeous Rubber Keyboard",
    "color": "red",
    "price": 828
  }


// CUSTOM DATA OUT PUT have Pagination
// 1 how to know response have pagination (detect) by HEADER
// custom return data & pagination

// X-Total-Count: 32  => using pagination




